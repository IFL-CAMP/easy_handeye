<?xml version="1.0" ?>
<launch>
    <!-- Setting calibration namespace -->
    <arg name="eye_on_hand" doc="if true, eye-on-hand instead of eye-on-base" />
    <arg name="namespace_prefix" default="easy_handeye" doc="the prefix of the namespace the node will run in, and of the folder in which the result will be saved" />
    <arg if="$(arg eye_on_hand)" name="namespace" value="$(arg namespace_prefix)_eye_on_hand" doc="the namespace the node will run in, and the folder in which the result will be saved" />
    <arg unless="$(arg eye_on_hand)" name="namespace" value="$(arg namespace_prefix)_eye_on_base" doc="the namespace the node will run in, and the folder in which the result will be saved" />

    <!-- The input reference frames -->
    <arg name="robot_base_frame" default="base_link" />
    <arg name="robot_effector_frame" default="tool0" />
    <arg name="tracking_base_frame" default="tracking_origin" />
    <arg name="tracking_marker_frame" default="tracking_target" />
    
    <!-- Publish dummy frames while calibrating -->
    <arg name="publish_dummy" default="true" doc="if true, a dummy calibration will be published to keep all frames in a single tf tree, hence visualized in RViz" />
    
    <!-- GUI arguments -->
    <arg name="start_rviz" default="true" doc="if true, rviz will be started with the provided config file" />
    <arg name="rviz_config_file" default="$(find easy_handeye)/launch/rviz_easy_handeye.config" doc="the path to the rviz config file to be opened" />
    <arg name="start_rqt" default="true" doc="if true, rqt will be started with the provided perspective" />
    <arg name="rqt_perspective_file" default="$(find easy_handeye)/launch/rqt_easy_handeye.perspective" doc="the path to the rqt perspective file to be opened" />
    
    <arg name="freehand_robot_movement" default="false" doc="if false, the rqt plugin for the automatic robot motion with MoveIt! will be started" />
    <arg name="move_group" default="manipulator" doc="the name of move_group for the automatic robot motion with MoveIt!" />
    <arg name="translation_delta_meters" default="0.1" doc="the maximum movement that the robot should perform in the translation phase" />
    <arg name="rotation_delta_degrees" default="25" doc="the maximum rotation that the robot should perform" />
    <arg name="robot_velocity_scaling" default="0.3" doc="the maximum speed the robot should reach, as a factor of the speed declared in the joint_limits.yaml" />
    <arg name="robot_acceleration_scaling" default="0.2" doc="the maximum acceleration the robot should reach, as a factor of the acceleration declared in the joint_limits.yaml" />
    
    <!-- Dummy calibration to have a fully connected TF tree and see all frames -->
    <group if="$(arg publish_dummy)">
        <node unless="$(arg eye_on_hand)" name="dummy_handeye" pkg="tf2_ros" type="static_transform_publisher"
            args="1 1 1 0 1.5 0 $(arg robot_base_frame) $(arg tracking_base_frame)" />
        <node if="$(arg eye_on_hand)" name="dummy_handeye" pkg="tf2_ros" type="static_transform_publisher"
            args="0 0 0.05 0 0 0 $(arg robot_effector_frame) $(arg tracking_base_frame)" />
    </group>

    <!-- Run the ViSP solver to determine the extrinsic parameters -->
    <node ns="$(arg namespace)" name="hand_eye_solver"
          pkg="visp_hand2eye_calibration"
          type="visp_hand2eye_calibration_calibrator">
        <remap from="/compute_effector_camera_quick" to="compute_effector_camera_quick"/>
    </node>

    <group ns="$(arg namespace)" >
        <param name="eye_on_hand" value="$(arg eye_on_hand)"/>
        <param name="robot_base_frame" value="$(arg robot_base_frame)" />
        <param name="robot_effector_frame" value="$(arg robot_effector_frame)" />
        <param name="tracking_base_frame" value="$(arg tracking_base_frame)" />
        <param name="tracking_marker_frame" value="$(arg tracking_marker_frame)" />
    </group>

    <!-- Connect the tracker to the solver -->
    <node name="hand_eye_connector"
          ns="$(arg namespace)"
          pkg="easy_handeye"
          type="calibrate.py"
          output="screen" />
    
    
    <!-- start GUI (Rviz and rqt_easy_handeye) -->
    
    <!--TODO: use this as soon as rviz rqt plugin accepts config parameter-->
    <!--<group ns="$(arg namespace)" >
        <node if="$(arg start_rqt)" unless="$(arg eye_on_hand)" name="$(arg namespace)_rqt" pkg="rqt" type="rqt" respawn="false" 
            args="clear-config perspective-file $(arg rqt_perspective_file)" output="screen" />
    </group>-->
    
    <!--TODO: remove as soon as rviz rqt plugin accepts config parameter-->  
    <node if="$(arg start_rviz)" name="$(anon rviz)" pkg="rviz" type="rviz" respawn="true" 
          args="-d $(arg rviz_config_file)" output="screen" />
        
    <node if="$(arg start_rqt)" ns="$(arg namespace)" name="$(anon namespace)_rqt" pkg="rqt_gui" type="rqt_gui" respawn="false" 
            args="--clear-config --perspective-file $(arg rqt_perspective_file)" output="screen" />
    <node unless="$(arg freehand_robot_movement)" name="calibration_mover" pkg="rqt_easy_handeye" type="rqt_calibrationmovements" respawn="false" >
        <param name="move_group" value="$(arg move_group)" />
        <param name="translation_delta_meters" value="$(arg translation_delta_meters)" />
        <param name="rotation_delta_degrees" value="$(arg rotation_delta_degrees)" />
        <param name="max_velocity_scaling" value="$(arg robot_velocity_scaling)" />
        <param name="max_acceleration_scaling" value="$(arg robot_acceleration_scaling)" />
    </node>

</launch>
